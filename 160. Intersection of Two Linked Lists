<https://leetcode.com/problems/intersection-of-two-linked-lists/>
```python
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def getIntersectionNode(self, headA: ListNode, headB: ListNode) -> ListNode:
        if not headA or not headB:
            return
        lenA = lenB = 0
        cur1 = headA
        cur2 = headB
        while cur1:
            lenA += 1
            cur1 = cur1.next
        while cur2:
            lenB += 1
            cur2 = cur2.next
        if lenA < lenB:
            diff = lenB - lenA
            while diff > 0:
                headB = headB.next
                diff -= 1
        else:
            diff = lenA - lenB
            while diff > 0:
                headA = headA.next
                diff -= 1
        while headA:
            if headA == headB:
                return headA
            else:
                headA = headA.next
                headB = headB.next
```
Time complexity: O(N)  
Space complexity: O(1)
